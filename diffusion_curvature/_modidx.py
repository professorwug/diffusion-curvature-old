# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/diffusion_curvature',
                'doc_host': 'https://professorwug.github.io',
                'git_url': 'https://github.com/professorwug/diffusion_curvature',
                'lib_path': 'diffusion_curvature'},
  'syms': { 'diffusion_curvature.comparisons': { 'diffusion_curvature.comparisons.diffusion_curvature_contra_noise': ( 'uniform_random_sampling_comparison.html#diffusion_curvature_contra_noise',
                                                                                                                       'diffusion_curvature/comparisons.py'),
                                                 'diffusion_curvature.comparisons.diffusion_entropy_curvature_of_data': ( 'uniform_random_sampling_comparison.html#diffusion_entropy_curvature_of_data',
                                                                                                                          'diffusion_curvature/comparisons.py'),
                                                 'diffusion_curvature.comparisons.diffusion_entropy_of_noise': ( 'uniform_random_sampling_comparison.html#diffusion_entropy_of_noise',
                                                                                                                 'diffusion_curvature/comparisons.py'),
                                                 'diffusion_curvature.comparisons.local_diffusion_entropy_of_matrix': ( 'uniform_random_sampling_comparison.html#local_diffusion_entropy_of_matrix',
                                                                                                                        'diffusion_curvature/comparisons.py')},
            'diffusion_curvature.core': { 'diffusion_curvature.core.diffusion_matrix': ( 'core.html#diffusion_matrix',
                                                                                         'diffusion_curvature/core.py'),
                                          'diffusion_curvature.core.gaussian_kernel': ( 'core.html#gaussian_kernel',
                                                                                        'diffusion_curvature/core.py'),
                                          'diffusion_curvature.core.median_heuristic': ( 'core.html#median_heuristic',
                                                                                         'diffusion_curvature/core.py'),
                                          'diffusion_curvature.core.plot_3d': ('core.html#plot_3d', 'diffusion_curvature/core.py')},
            'diffusion_curvature.curves': { 'diffusion_curvature.curves.rate_of_change_of_entropy': ( 'curvature_curves_in_euclidean_space.html#rate_of_change_of_entropy',
                                                                                                      'diffusion_curvature/curves.py')},
            'diffusion_curvature.curvess': { 'diffusion_curvature.curvess.rate_of_change_of_entropy': ( 'curvature_curves_in_euclidean_space.html#rate_of_change_of_entropy',
                                                                                                        'diffusion_curvature/curvess.py')},
            'diffusion_curvature.datasets': { 'diffusion_curvature.datasets.ellipsoid': ( 'datasets.html#ellipsoid',
                                                                                          'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.hyperboloid': ( 'datasets.html#hyperboloid',
                                                                                            'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.paraboloid': ( 'datasets.html#paraboloid',
                                                                                           'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.plane': ( 'datasets.html#plane',
                                                                                      'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.rejection_sample_for_ellipsoid': ( 'datasets.html#rejection_sample_for_ellipsoid',
                                                                                                               'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.rejection_sample_for_hyperboloid': ( 'datasets.html#rejection_sample_for_hyperboloid',
                                                                                                                 'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.rejection_sample_for_saddle': ( 'datasets.html#rejection_sample_for_saddle',
                                                                                                            'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.rejection_sample_for_torus': ( 'datasets.html#rejection_sample_for_torus',
                                                                                                           'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.sphere': ( 'datasets.html#sphere',
                                                                                       'diffusion_curvature/datasets.py'),
                                              'diffusion_curvature.datasets.torus': ( 'datasets.html#torus',
                                                                                      'diffusion_curvature/datasets.py')},
            'diffusion_curvature.differentiable_laziness': { 'diffusion_curvature.differentiable_laziness.curvature': ( 'differentiable_diffusion_curvature.html#curvature',
                                                                                                                        'diffusion_curvature/differentiable_laziness.py')},
            'diffusion_curvature.gaussian_invariance': { 'diffusion_curvature.gaussian_invariance.compute_anisotropic_affinities_from_graph': ( 'gaussian_invariance.html#compute_anisotropic_affinities_from_graph',
                                                                                                                                                'diffusion_curvature/gaussian_invariance.py'),
                                                         'diffusion_curvature.gaussian_invariance.compute_anisotropic_diffusion_matrix_from_graph': ( 'gaussian_invariance.html#compute_anisotropic_diffusion_matrix_from_graph',
                                                                                                                                                      'diffusion_curvature/gaussian_invariance.py'),
                                                         'diffusion_curvature.gaussian_invariance.gaussian_invariant_curvature_of_graph': ( 'gaussian_invariance.html#gaussian_invariant_curvature_of_graph',
                                                                                                                                            'diffusion_curvature/gaussian_invariance.py')},
            'diffusion_curvature.inside_outside_laziness': { 'diffusion_curvature.inside_outside_laziness.inside_outside_laziness': ( 'signed_inside_outside_curvature.html#inside_outside_laziness',
                                                                                                                                      'diffusion_curvature/inside_outside_laziness.py'),
                                                             'diffusion_curvature.inside_outside_laziness.inside_outside_laziness_v2': ( 'signed_inside_outside_curvature.html#inside_outside_laziness_v2',
                                                                                                                                         'diffusion_curvature/inside_outside_laziness.py')},
            'diffusion_curvature.laziness': { 'diffusion_curvature.laziness.curvature': ( 'laziness.html#curvature',
                                                                                          'diffusion_curvature/laziness.py')},
            'diffusion_curvature.laziness_decay': { 'diffusion_curvature.laziness_decay.laziness_decay': ( 'laziness_decay.html#laziness_decay',
                                                                                                           'diffusion_curvature/laziness_decay.py')},
            'diffusion_curvature.normalizing_flows': { 'diffusion_curvature.normalizing_flows.FlowNet': ( 'continuous_normalizing_flows.html#flownet',
                                                                                                          'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.FlowNet.__init__': ( 'continuous_normalizing_flows.html#flownet.__init__',
                                                                                                                   'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.FlowNet.forward': ( 'continuous_normalizing_flows.html#flownet.forward',
                                                                                                                  'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener': ( 'continuous_normalizing_flows.html#greatflattener',
                                                                                                                 'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.__init__': ( 'continuous_normalizing_flows.html#greatflattener.__init__',
                                                                                                                          'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.configure_optimizers': ( 'continuous_normalizing_flows.html#greatflattener.configure_optimizers',
                                                                                                                                      'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.forward': ( 'continuous_normalizing_flows.html#greatflattener.forward',
                                                                                                                         'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.generate_data': ( 'continuous_normalizing_flows.html#greatflattener.generate_data',
                                                                                                                               'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.sample': ( 'continuous_normalizing_flows.html#greatflattener.sample',
                                                                                                                        'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.train_dataloader': ( 'continuous_normalizing_flows.html#greatflattener.train_dataloader',
                                                                                                                                  'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.GreatFlattener.training_step': ( 'continuous_normalizing_flows.html#greatflattener.training_step',
                                                                                                                               'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.ManifoldNeighborhoodDataset': ( 'continuous_normalizing_flows.html#manifoldneighborhooddataset',
                                                                                                                              'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.ManifoldNeighborhoodDataset.__getitem__': ( 'continuous_normalizing_flows.html#manifoldneighborhooddataset.__getitem__',
                                                                                                                                          'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.ManifoldNeighborhoodDataset.__init__': ( 'continuous_normalizing_flows.html#manifoldneighborhooddataset.__init__',
                                                                                                                                       'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.ManifoldNeighborhoodDataset.__len__': ( 'continuous_normalizing_flows.html#manifoldneighborhooddataset.__len__',
                                                                                                                                      'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.NegativeLogLikelihood': ( 'continuous_normalizing_flows.html#negativeloglikelihood',
                                                                                                                        'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.NegativeLogLikelihood.__call__': ( 'continuous_normalizing_flows.html#negativeloglikelihood.__call__',
                                                                                                                                 'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.NegativeLogLikelihood.__init__': ( 'continuous_normalizing_flows.html#negativeloglikelihood.__init__',
                                                                                                                                 'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.NegativeLogLikelihoodQuaUniform': ( 'continuous_normalizing_flows.html#negativeloglikelihoodquauniform',
                                                                                                                                  'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.NegativeLogLikelihoodQuaUniform.__call__': ( 'continuous_normalizing_flows.html#negativeloglikelihoodquauniform.__call__',
                                                                                                                                           'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.NegativeLogLikelihoodQuaUniform.__init__': ( 'continuous_normalizing_flows.html#negativeloglikelihoodquauniform.__init__',
                                                                                                                                           'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.dataloader_from_manifold_neighborhoods': ( 'continuous_normalizing_flows.html#dataloader_from_manifold_neighborhoods',
                                                                                                                                         'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.neural_flattener': ( 'continuous_normalizing_flows.html#neural_flattener',
                                                                                                                   'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.neural_flattener.__init__': ( 'continuous_normalizing_flows.html#neural_flattener.__init__',
                                                                                                                            'diffusion_curvature/normalizing_flows.py'),
                                                       'diffusion_curvature.normalizing_flows.neural_flattener.fit_transform': ( 'continuous_normalizing_flows.html#neural_flattener.fit_transform',
                                                                                                                                 'diffusion_curvature/normalizing_flows.py')},
            'diffusion_curvature.ode_correction': { 'diffusion_curvature.ode_correction.single_point_diffusion_curvature_contra_neural_flattening': ( 'sampling_learned_by_ode.html#single_point_diffusion_curvature_contra_neural_flattening',
                                                                                                                                                      'diffusion_curvature/ode_correction.py')},
            'diffusion_curvature.region_limited_laziness': { 'diffusion_curvature.region_limited_laziness.local_laziness': ( 'region_limited_laziness.html#local_laziness',
                                                                                                                             'diffusion_curvature/region_limited_laziness.py')},
            'diffusion_curvature.volume_comparisons': { 'diffusion_curvature.volume_comparisons.coordinate_grid': ( 'volume_comparison_curvature.html#coordinate_grid',
                                                                                                                    'diffusion_curvature/volume_comparisons.py')}}}
